opt_in_rules:
  - force_cast
  - force_unwrapping
  - empty_count
  - explicit_init
  - overridden_super_call
  - void_return
  - private_outlet
  - redundant_nil_coalescing
  - prohibited_super_call
  - implicit_return
  - fatal_error_message
  - prefer_self_type_over_type_of_self
  - unused_optional_binding
  - implicitly_unwrapped_optional
  - colon
  - trailing_newline
  - return_arrow_whitespace
  - vertical_whitespace
  - operator_usage_whitespace
  - legacy_cggeometry_functions
  - legacy_constant
  - legacy_constructor
  - legacy_nsgeometry_functions
  - valid_ibinspectable
  - first_where
  - nesting
  - trailing_semicolon
  - custom_rules

disabled_rules:
  - conditional_returns_on_newline
  - identifier_name
  - todo
  - function_parameter_count
  - multiple_closures_with_trailing_closure
  - unused_setter_value
  - trailing_comma
  - opening_brace
  - line_length
  - file_header
  - shorthand_operator

excluded:
  - Carthage
  - Pods
  - "*/.build"

analyzer_rules:
  - unused_declaration
  - unused_import

indentation: 4

nesting:
  type_level: 2
empty_count:
  severity: warning
force_cast:
  severity: warning
trailing_whitespace:
  ignores_empty_lines: true
type_body_length:
  - 500 # warning
  - 1000 # error
file_length:
  - 1000 # warning
  - 2000 # error
type_name:
  min_length: 2
  max_length:
    warning: 50
    error: 60

custom_rules:
  no_direct_standard_out_logs:
    name: "Writing log messages directly to standard out is disallowed"
    regex: "(\\bprint|\\bdebugPrint|\\bdump|Swift\\.print|Swift\\.debugPrint|Swift\\.dump)\\s*\\("
    match_kinds:
      - identifier
    message: "Don't commit `print(…)`, `debugPrint(…)`, or `dump(…)` as they write to standard out in release. Either log to a dedicated logging system or silence this warning in debug-only scenarios explicitly using `// swiftlint:disable:next no_direct_standard_out_logs`"
    severity: warning
